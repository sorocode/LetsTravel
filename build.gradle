plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.4.0"
}

node {
	version = '22.2.0' // 사용할 Node.js 버전
	npmVersion = '10.7.0' // 사용할 npm 버전
	download = true // 자동 다운로드 설정
}

group = 'com.letsTravel'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: NpmTask) {
	workingDir = file(frontendDir)
	inputs.dir frontendDir
	group = BasePlugin.BUILD_GROUP
	args = ['install']
}

task auditFix(type: NpmTask) {
	workingDir = file(frontendDir)
	inputs.dir frontendDir
	group = BasePlugin.BUILD_GROUP
	args = ['audit', 'fix']
}

task buildReact(type: NpmTask) {
	dependsOn "installReact", "auditFix"
	workingDir = file(frontendDir)
	inputs.dir frontendDir
	group = BasePlugin.BUILD_GROUP
	args = ['run', 'build']
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/dist"
	into "$projectDir/src/main/resources/static"
}
